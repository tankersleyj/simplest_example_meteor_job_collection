// Generated by CoffeeScript 1.12.2
(function() {
  var waitQueueChained;

  waitQueueChained = JobCollection('waitQueueChained');

  Meteor.startup(function() {
    waitQueueChained.startJobServer();
    waitQueueChained.processJobs('theWaitingTask', {
      pollInterval: 1 * 1000
    }, function(job, callback) {
      console.log('Job worker started, with .processJobs() ');
      Meteor.call('chainedFunction', function(error, res) {
        console.log('Method callback');
        if (res) {
          console.log(res);
          job.done();
        }
        if (error) {
          console.log(error);
          job.cancel();
        }
      });
      callback();
    });
  });

  Meteor.methods({
    triggerLongWaitChainedTask: function() {
      console.log('Sumbitting task type "callLongWaitTask" ');
      Job(waitQueueChained, 'theWaitingTask', {}).save();
    },
    chainedFunction: function() {
      Meteor.call('reallyLongWait');
    },
    reallyLongWait: function() {
      var fut, milliseconds;
      console.log('Called Meteor method \'longWait\'. This will take some time to completed.');
      milliseconds = 30000;
      fut = new Future;
      Meteor.setTimeout((function() {
        fut["return"]('The job completed after: ' + milliseconds + 'ms');
      }), milliseconds);
      return fut.wait();
    }
  });

}).call(this);

//# sourceMappingURL=longWaitChained.js.map
