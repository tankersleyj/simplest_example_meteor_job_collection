# import { Meteor } from 'meteor/meteor';
# import Future from 'fibers/future';
multipleQueue = JobCollection('multipleQueue')


Meteor.startup ->
  multipleQueue.startJobServer()
  multipleQueue.processJobs 'sendEmail', { pollInterval: 1 * 1000 }, (job, callback) ->
# ##### THIS IS WHERE THE WORK GETS DONE #####//
    console.log 'SEND Email', job.data
    job.done()
    callback()
    # TODO: what is this? Can the dev modify this?
    return
  multipleQueue.processJobs 'archiveEmail', { pollInterval: 1 * 1000 }, (job, callback) ->
# ##### THIS IS WHERE THE WORK GETS DONE #####//
    console.log 'ARCHIVE Email', job.data
    job.done()
    callback()
    # TODO: what is this? Can the dev modify this?
    return
  return


Meteor.methods triggerMultiple: ->
# Create an 'antecedent' job:
  sendJob = new Job(multipleQueue, 'sendEmail',
    address: 'bozo@clowns.com'
    subject: 'Critical rainbow hair shortage'
    message: 'LOL; JK, KThxBye.')
  #create a 'dependent job'
  archiveJob = new Job(multipleQueue, 'archiveEmail', mydata: 'data')
  sendJob.save (error, res) ->
    console.log 'sendJob successfully saved'
    if res
      console.log 'id is : ', res
      # This is what is necessary to create a dependency.
      #it's in the callback because we need to make sure sendJob 'antecedent' is ready
      archiveJob.depends([ sendJob ]).save()
    return
  return

# ---
# generated by js2coffee 2.2.0